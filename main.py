# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. 
# Затем пользователь вводит сами элементы множеств.

numbers_1 = int(input("Введите количество элементов первого множества: "))
numbers_2 = int(input("Введите колличество элементов второго множества: "))

list_1 = []
list_2 = []

for i in range(numbers_1):
    list_1.append(int(input("Введите символ первого множества: ")))
print(*list_1)

for i in range(numbers_2):
    list_2.append(int(input("Введите символ второго множества: ")))
print(*list_2)
print()

list_1 = set(list_1)
print(*list_1)
list_2 = set(list_2)
print(*list_2)
list_3 = list_1.intersection(list_2)
print()

list_3 = list(list_3)
list_3.sort
print(*list_3)

﻿# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты 
# высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних. 
# Всего на грядке растёт N кустов.# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло 
# азличное число ягод — на i-ом кусте выросло ai ягод.# В этом фермерском хозяйстве внедрена система автоматического 
# сбора черники. # Эта система состоит из управляющего модуля и нескольких собирающих модулей. Собирающий модуль 
# за один заход, находясь # непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, 
# находясь перед некоторым кустом заданной во входном файле грядки.

from random import randint

quantity = int(input("Введите количество кустов: "))

# Создадим случайный массив ягод от 1 до 15 по количеству кустов:
numbers = [randint(1, 15) for num in range(quantity)]
print("Количество ягод по кустам: ", *numbers)
print()
max_result = 0              # макс количество ягод с трёх кустов
result = 0         
i_max = 0                   # индекс куста с максимальным количеством ягод
i = 1 - quantity            # начинаем перебирать список со второго элемента списка, но используя отрицательную индексацию
while i < 1:                # пока цикл не вернется на второй элемент, но уже положительной индексации

	result = numbers[i] + numbers[i + 1] + numbers[i - 1]# перебираем суммы ягод по три куста       
	print(result)
	if result > max_result:
		max_result = result      # находим сочетание кустов с наибольшим количеством
		i_max = i                # индекс центрального куста в нужном "трёхкустии"
	i += 1
print()
print(max_result)            # для промежуточной проверки
print(i_max)                 # для промежуточной проверки
print()
if i_max == 0:
	print(f"Центральный куст: номер 1")
else:
	print(f"Центральный куст: номер {i_max + quantity + 1}")

